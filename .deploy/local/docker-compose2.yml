services:
  wechat-admin-redis:
    image: "${REGISTRY:-docker.io}/redis:latest"
    container_name: wechat-admin-redis
    restart: always
    networks:
      - wechat-robot
    environment:
      TZ: Asia/Shanghai
      REDIS_PASSWORD: r12345678 # 自行修改
    command: [ "sh", "-c", "redis-server /etc/redis/redis.conf --requirepass \"$${REDIS_PASSWORD}\"" ]
    volumes:
      - ./wechat_admin_redis_data:/data
      - ./redis.conf:/etc/redis/redis.conf
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  wechat-admin-mysql:
    image: "${REGISTRY:-docker.io}/mysql:8.2.0"
    restart: always
    container_name: wechat-admin-mysql
    networks:
      - wechat-robot
    volumes:
      - ./wechat_admin_mysql_data:/var/lib/mysql # 挂载目录，持久化存储
      - ./my.cnf:/etc/my.cnf
    environment:
      TZ: Asia/Shanghai # 设置时区
      MYSQL_ROOT_PASSWORD: mroot12345678 # root 密码
      MYSQL_USER: wechat # 创建专用用户
      MYSQL_PASSWORD: mwechat12345678
      MYSQL_DATABASE: robot_admin # 数据库名称
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p$${MYSQL_ROOT_PASSWORD} --silent || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 120s

  wechat-server:
    image: registry.cn-shenzhen.aliyuncs.com/houhou/wechat-server:latest
    container_name: wechat-server
    restart: always
    ports:
      - "8090:3000"
    networks:
      - wechat-robot
    volumes:
      - ./wechat-server/data:/data
    environment:
      TZ: Asia/Shanghai

  word-cloud-server:
    image: registry.cn-shenzhen.aliyuncs.com/houhou/word-cloud-server:latest
    container_name: word-cloud-server
    restart: always
    networks:
      - wechat-robot

  wechat-robot-admin-frontend:
    image: registry.cn-shenzhen.aliyuncs.com/houhou/wechat-robot-admin-frontend:latest
    container_name: wechat-robot-admin-frontend
    restart: always
    networks:
      - wechat-robot
    healthcheck:
      test: ["CMD-SHELL", "printf 'GET / HTTP/1.0\\r\\nHost: localhost\\r\\n\\r\\n' | nc -w2 127.0.0.1 9000 | grep -i '<html' >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s

  wechat-robot-admin-backend:
    image: registry.cn-shenzhen.aliyuncs.com/houhou/wechat-robot-admin-backend:latest
    container_name: wechat-robot-admin-backend
    restart: always
    networks:
      - wechat-robot
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      GIN_MODE: release
      TZ: Asia/Shanghai
      DOCKER_NETWORK: wechat-robot
      SESSION_SECRET: sessionid_123456 # 可自行修改 随便设置个uuid即可
      OPENAI_API_KEY: sk-123456 # 自行修改
      WECHAT_SERVER_ADDRESS: http://wechat-server:3000
      WECHAT_SERVER_TOKEN: w123456 # 自行修改
      WECHAT_OFFICIAL_ACCOUNT_AUTH_URL: https://img.houhoukang.com/uranus/qrcode_for_gh.jpg # 自行修改
      MYSQL_DRIVER: mysql
      MYSQL_HOST: wechat-admin-mysql
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASSWORD: mroot12345678
      MYSQL_DB: robot_admin
      REDIS_HOST: wechat-admin-redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: r12345678
      THIRD_PARTY_API_KEY: t123456 # 自行修改 AI语音合成的 key
    depends_on:
      wechat-admin-redis:
        condition: service_healthy
      wechat-admin-mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "printf 'GET /api/v1/probe HTTP/1.0\\r\\nHost: localhost\\r\\n\\r\\n' | nc -w2 127.0.0.1 9000 | grep 'success' >/dev/null || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 40s

  wechat-nginx:
    image: "${REGISTRY:-docker.io}/nginx:latest"
    container_name: wechat-nginx
    restart: always
    ports:
      - "8080:9000"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - wechat-robot
    depends_on:
      wechat-robot-admin-frontend:
        condition: service_healthy
      wechat-robot-admin-backend:
        condition: service_healthy

networks:
  wechat-robot:
    external: true
